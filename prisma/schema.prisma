// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(cuid())
  clerkId   String   @unique
  email     String   @unique
  firstName String?
  lastName  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  orders Order[]
  
  @@map("users")
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String?
  image       String?
  category    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  variants   ProductVariant[]
  orderItems OrderItem[]
  
  @@map("products")
}

model ProductVariant {
  id        String   @id @default(cuid())
  productId String
  name      String   // e.g., "3 pieces", "5 pieces plain", "5 pieces dulce de leche"
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  product    Product     @relation(fields: [productId], references: [id], onDelete: Cascade)
  orderItems OrderItem[]
  
  @@unique([productId, name])
  @@map("product_variants")
}

model Order {
  id              String      @id @default(cuid())
  userId          String
  stripeSessionId String?     @unique
  status          OrderStatus @default(PENDING)
  total           Float
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  
  user  User        @relation(fields: [userId], references: [id])
  items OrderItem[]
  
  @@map("orders")
}

model OrderItem {
  id               String  @id @default(cuid())
  orderId          String
  productId        String
  productVariantId String?
  quantity         Int
  price            Float
  
  order          Order           @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product        Product         @relation(fields: [productId], references: [id])
  productVariant ProductVariant? @relation(fields: [productVariantId], references: [id])
  
  @@map("order_items")
}

enum OrderStatus {
  PENDING
  PROCESSING
  COMPLETED
  CANCELLED
}
